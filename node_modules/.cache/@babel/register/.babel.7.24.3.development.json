{"{\"assumptions\":{},\"sourceRoot\":\"/home/ketansutar/Projects/weather/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ketansutar/Projects/weather\",\"filename\":\"/home/ketansutar/Projects/weather/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ketansutar/Projects/weather\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"require('dotenv').config();\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst {\n  MongoClient,\n  ServerApiVersion\n} = require('mongodb');\nconst jwt = require('jsonwebtoken');\nconst bcrypt = require('bcryptjs');\nconst bodyParser = require('body-parser');\nconst app = express();\nconst weatherRoutes = require('./routes/weather');\nconst cityRoutes = require('./routes/cities');\n\n//const uri = \"mongodb+srv://ketansutar2022:Simple@123@weather.zkpmrmv.mongodb.net/?retryWrites=true&w=majority&appName=weather\"\n\napp.use(express.json()); // Middleware to parse JSON bodies\n\nconst port = process.env.PORT || 3000;\n\n// MongoDB connection\nmongoose.connect('mongodb://localhost:27017/weather', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => console.log('MongoDB connected')).catch(err => console.log(err));\napp.use(bodyParser.json());\nconst userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true\n  },\n  password: {\n    type: String,\n    required: true\n  }\n});\nconst Login = mongoose.model('Login', userSchema, 'login');\napp.use('/api/weather', weatherRoutes);\napp.use('/api/cities', cityRoutes);\napp.post('/login', async (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  try {\n    const user = await Login.findOne({\n      username\n    });\n    if (!user) {\n      return res.status(404).json({\n        message: \"User not found\"\n      });\n    }\n    const passHash = await bcrypt.hash(user.password, 10);\n    const isValidPassword = await bcrypt.compare(password, passHash);\n    if (!isValidPassword) {\n      return res.status(401).json({\n        message: \"Invalid Password\"\n      });\n    }\n    const token = jwt.sign({\n      userId: user._id\n    }, process.env.JWT_SECRET, {\n      expiresIn: '1h'\n    });\n    res.status(200).json({\n      token\n    });\n  } catch (error) {\n    console.error('Login error:', error);\n    res.status(500).json({\n      message: 'Server Error'\n    });\n  }\n});\napp.listen(port, () => {\n  console.log(`Server running on port ${port}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiZXhwcmVzcyIsIm1vbmdvb3NlIiwiTW9uZ29DbGllbnQiLCJTZXJ2ZXJBcGlWZXJzaW9uIiwiand0IiwiYmNyeXB0IiwiYm9keVBhcnNlciIsImFwcCIsIndlYXRoZXJSb3V0ZXMiLCJjaXR5Um91dGVzIiwidXNlIiwianNvbiIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsImNhdGNoIiwiZXJyIiwidXNlclNjaGVtYSIsIlNjaGVtYSIsInVzZXJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwicGFzc3dvcmQiLCJMb2dpbiIsIm1vZGVsIiwicG9zdCIsInJlcSIsInJlcyIsImJvZHkiLCJ1c2VyIiwiZmluZE9uZSIsInN0YXR1cyIsIm1lc3NhZ2UiLCJwYXNzSGFzaCIsImhhc2giLCJpc1ZhbGlkUGFzc3dvcmQiLCJjb21wYXJlIiwidG9rZW4iLCJzaWduIiwidXNlcklkIiwiX2lkIiwiSldUX1NFQ1JFVCIsImV4cGlyZXNJbiIsImVycm9yIiwibGlzdGVuIl0sInNvdXJjZVJvb3QiOiIvaG9tZS9rZXRhbnN1dGFyL1Byb2plY3RzL3dlYXRoZXIvIiwic291cmNlcyI6WyJzZXJ2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnZG90ZW52JykuY29uZmlnKCk7XG5cbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5jb25zdCB7IE1vbmdvQ2xpZW50LCBTZXJ2ZXJBcGlWZXJzaW9uIH0gPSByZXF1aXJlKCdtb25nb2RiJyk7XG5jb25zdCBqd3QgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKTtcbmNvbnN0IGJjcnlwdCA9IHJlcXVpcmUoJ2JjcnlwdGpzJyk7XG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3Qgd2VhdGhlclJvdXRlcyA9IHJlcXVpcmUoJy4vcm91dGVzL3dlYXRoZXInKTtcbmNvbnN0IGNpdHlSb3V0ZXMgPSByZXF1aXJlKCcuL3JvdXRlcy9jaXRpZXMnKTtcblxuLy9jb25zdCB1cmkgPSBcIm1vbmdvZGIrc3J2Oi8va2V0YW5zdXRhcjIwMjI6U2ltcGxlQDEyM0B3ZWF0aGVyLnprcG1ybXYubW9uZ29kYi5uZXQvP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eSZhcHBOYW1lPXdlYXRoZXJcIlxuXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTsgLy8gTWlkZGxld2FyZSB0byBwYXJzZSBKU09OIGJvZGllc1xuXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xuXG5cbi8vIE1vbmdvREIgY29ubmVjdGlvblxubW9uZ29vc2UuY29ubmVjdCgnbW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNy93ZWF0aGVyJywgXG57IFxuICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIFxuICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUgXG59KVxuICAudGhlbigoKSA9PiBjb25zb2xlLmxvZygnTW9uZ29EQiBjb25uZWN0ZWQnKSlcbiAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKTtcblxuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuY29uc3QgdXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICB1c2VybmFtZSA6IHt0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlfSxcbiAgcGFzc3dvcmQ6IHt0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlfVxufSk7XG5cbmNvbnN0IExvZ2luID0gbW9uZ29vc2UubW9kZWwoJ0xvZ2luJywgdXNlclNjaGVtYSwgJ2xvZ2luJyk7XG5cbmFwcC51c2UoJy9hcGkvd2VhdGhlcicsIHdlYXRoZXJSb3V0ZXMpO1xuYXBwLnVzZSgnL2FwaS9jaXRpZXMnLCBjaXR5Um91dGVzKTtcblxuYXBwLnBvc3QoJy9sb2dpbicsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7dXNlcm5hbWUsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcblxuICB0cnkge1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBMb2dpbi5maW5kT25lKHsgdXNlcm5hbWUgfSk7XG4gICAgaWYoIXVzZXIpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7IG1lc3NhZ2UgOiBcIlVzZXIgbm90IGZvdW5kXCJ9KTtcbiAgICB9XG4gICAgY29uc3QgcGFzc0hhc2ggPSBhd2FpdCBiY3J5cHQuaGFzaCh1c2VyLnBhc3N3b3JkLCAxMCk7XG4gICAgY29uc3QgaXNWYWxpZFBhc3N3b3JkID0gYXdhaXQgYmNyeXB0LmNvbXBhcmUocGFzc3dvcmQsIHBhc3NIYXNoKTtcblxuICAgIGlmKCFpc1ZhbGlkUGFzc3dvcmQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2UgOiBcIkludmFsaWQgUGFzc3dvcmRcIn0pO1xuICAgIH1cblxuICAgIGNvbnN0IHRva2VuID0gand0LnNpZ24oeyB1c2VySWQgOiB1c2VyLl9pZCB9LCBwcm9jZXNzLmVudi5KV1RfU0VDUkVULCB7ZXhwaXJlc0luOiAnMWgnfSk7XG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyB0b2tlbiB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdMb2dpbiBlcnJvcjonLCBlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiAnU2VydmVyIEVycm9yJ30pO1xuICB9XG59KTtcblxuXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgY29uc29sZS5sb2coYFNlcnZlciBydW5uaW5nIG9uIHBvcnQgJHtwb3J0fWApO1xufSk7XG5cbiJdLCJtYXBwaW5ncyI6IkFBQUFBLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQ0MsTUFBTSxDQUFDLENBQUM7QUFFMUIsTUFBTUMsT0FBTyxHQUFHRixPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1HLFFBQVEsR0FBR0gsT0FBTyxDQUFDLFVBQVUsQ0FBQztBQUNwQyxNQUFNO0VBQUVJLFdBQVc7RUFBRUM7QUFBaUIsQ0FBQyxHQUFHTCxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQzVELE1BQU1NLEdBQUcsR0FBR04sT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUNuQyxNQUFNTyxNQUFNLEdBQUdQLE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFDbEMsTUFBTVEsVUFBVSxHQUFHUixPQUFPLENBQUMsYUFBYSxDQUFDO0FBRXpDLE1BQU1TLEdBQUcsR0FBR1AsT0FBTyxDQUFDLENBQUM7QUFDckIsTUFBTVEsYUFBYSxHQUFHVixPQUFPLENBQUMsa0JBQWtCLENBQUM7QUFDakQsTUFBTVcsVUFBVSxHQUFHWCxPQUFPLENBQUMsaUJBQWlCLENBQUM7O0FBRTdDOztBQUVBUyxHQUFHLENBQUNHLEdBQUcsQ0FBQ1YsT0FBTyxDQUFDVyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7QUFFekIsTUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsSUFBSSxJQUFJLElBQUk7O0FBR3JDO0FBQ0FkLFFBQVEsQ0FBQ2UsT0FBTyxDQUFDLG1DQUFtQyxFQUNwRDtFQUNFQyxlQUFlLEVBQUUsSUFBSTtFQUNyQkMsa0JBQWtCLEVBQUU7QUFDdEIsQ0FBQyxDQUFDLENBQ0NDLElBQUksQ0FBQyxNQUFNQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQzVDQyxLQUFLLENBQUNDLEdBQUcsSUFBSUgsT0FBTyxDQUFDQyxHQUFHLENBQUNFLEdBQUcsQ0FBQyxDQUFDO0FBR2pDaEIsR0FBRyxDQUFDRyxHQUFHLENBQUNKLFVBQVUsQ0FBQ0ssSUFBSSxDQUFDLENBQUMsQ0FBQztBQUUxQixNQUFNYSxVQUFVLEdBQUcsSUFBSXZCLFFBQVEsQ0FBQ3dCLE1BQU0sQ0FBQztFQUNyQ0MsUUFBUSxFQUFHO0lBQUNDLElBQUksRUFBRUMsTUFBTTtJQUFFQyxRQUFRLEVBQUU7RUFBSSxDQUFDO0VBQ3pDQyxRQUFRLEVBQUU7SUFBQ0gsSUFBSSxFQUFFQyxNQUFNO0lBQUVDLFFBQVEsRUFBRTtFQUFJO0FBQ3pDLENBQUMsQ0FBQztBQUVGLE1BQU1FLEtBQUssR0FBRzlCLFFBQVEsQ0FBQytCLEtBQUssQ0FBQyxPQUFPLEVBQUVSLFVBQVUsRUFBRSxPQUFPLENBQUM7QUFFMURqQixHQUFHLENBQUNHLEdBQUcsQ0FBQyxjQUFjLEVBQUVGLGFBQWEsQ0FBQztBQUN0Q0QsR0FBRyxDQUFDRyxHQUFHLENBQUMsYUFBYSxFQUFFRCxVQUFVLENBQUM7QUFFbENGLEdBQUcsQ0FBQzBCLElBQUksQ0FBQyxRQUFRLEVBQUUsT0FBT0MsR0FBRyxFQUFFQyxHQUFHLEtBQUs7RUFDckMsTUFBTTtJQUFDVCxRQUFRO0lBQUVJO0VBQVMsQ0FBQyxHQUFHSSxHQUFHLENBQUNFLElBQUk7RUFFdEMsSUFBSTtJQUNGLE1BQU1DLElBQUksR0FBRyxNQUFNTixLQUFLLENBQUNPLE9BQU8sQ0FBQztNQUFFWjtJQUFTLENBQUMsQ0FBQztJQUM5QyxJQUFHLENBQUNXLElBQUksRUFBRTtNQUNSLE9BQU9GLEdBQUcsQ0FBQ0ksTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDNUIsSUFBSSxDQUFDO1FBQUU2QixPQUFPLEVBQUc7TUFBZ0IsQ0FBQyxDQUFDO0lBQzVEO0lBQ0EsTUFBTUMsUUFBUSxHQUFHLE1BQU1wQyxNQUFNLENBQUNxQyxJQUFJLENBQUNMLElBQUksQ0FBQ1AsUUFBUSxFQUFFLEVBQUUsQ0FBQztJQUNyRCxNQUFNYSxlQUFlLEdBQUcsTUFBTXRDLE1BQU0sQ0FBQ3VDLE9BQU8sQ0FBQ2QsUUFBUSxFQUFFVyxRQUFRLENBQUM7SUFFaEUsSUFBRyxDQUFDRSxlQUFlLEVBQUU7TUFDbkIsT0FBT1IsR0FBRyxDQUFDSSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM1QixJQUFJLENBQUM7UUFBRTZCLE9BQU8sRUFBRztNQUFrQixDQUFDLENBQUM7SUFDOUQ7SUFFQSxNQUFNSyxLQUFLLEdBQUd6QyxHQUFHLENBQUMwQyxJQUFJLENBQUM7TUFBRUMsTUFBTSxFQUFHVixJQUFJLENBQUNXO0lBQUksQ0FBQyxFQUFFbkMsT0FBTyxDQUFDQyxHQUFHLENBQUNtQyxVQUFVLEVBQUU7TUFBQ0MsU0FBUyxFQUFFO0lBQUksQ0FBQyxDQUFDO0lBQ3hGZixHQUFHLENBQUNJLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQzVCLElBQUksQ0FBQztNQUFFa0M7SUFBTSxDQUFDLENBQUM7RUFDakMsQ0FBQyxDQUFDLE9BQU9NLEtBQUssRUFBRTtJQUNkL0IsT0FBTyxDQUFDK0IsS0FBSyxDQUFDLGNBQWMsRUFBRUEsS0FBSyxDQUFDO0lBQ3BDaEIsR0FBRyxDQUFDSSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM1QixJQUFJLENBQUM7TUFBRTZCLE9BQU8sRUFBRTtJQUFjLENBQUMsQ0FBQztFQUNsRDtBQUNGLENBQUMsQ0FBQztBQUdGakMsR0FBRyxDQUFDNkMsTUFBTSxDQUFDeEMsSUFBSSxFQUFFLE1BQU07RUFDckJRLE9BQU8sQ0FBQ0MsR0FBRyxDQUFFLDBCQUF5QlQsSUFBSyxFQUFDLENBQUM7QUFDL0MsQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["require","config","express","mongoose","MongoClient","ServerApiVersion","jwt","bcrypt","bodyParser","app","weatherRoutes","cityRoutes","use","json","port","process","env","PORT","connect","useNewUrlParser","useUnifiedTopology","then","console","log","catch","err","userSchema","Schema","username","type","String","required","password","Login","model","post","req","res","body","user","findOne","status","message","passHash","hash","isValidPassword","compare","token","sign","userId","_id","JWT_SECRET","expiresIn","error","listen"],"sourceRoot":"/home/ketansutar/Projects/weather/","sources":["server.js"],"sourcesContent":["require('dotenv').config();\n\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst { MongoClient, ServerApiVersion } = require('mongodb');\nconst jwt = require('jsonwebtoken');\nconst bcrypt = require('bcryptjs');\nconst bodyParser = require('body-parser');\n\nconst app = express();\nconst weatherRoutes = require('./routes/weather');\nconst cityRoutes = require('./routes/cities');\n\n//const uri = \"mongodb+srv://ketansutar2022:Simple@123@weather.zkpmrmv.mongodb.net/?retryWrites=true&w=majority&appName=weather\"\n\napp.use(express.json()); // Middleware to parse JSON bodies\n\nconst port = process.env.PORT || 3000;\n\n\n// MongoDB connection\nmongoose.connect('mongodb://localhost:27017/weather', \n{ \n  useNewUrlParser: true, \n  useUnifiedTopology: true \n})\n  .then(() => console.log('MongoDB connected'))\n  .catch(err => console.log(err));\n\n\napp.use(bodyParser.json());\n\nconst userSchema = new mongoose.Schema({\n  username : {type: String, required: true},\n  password: {type: String, required: true}\n});\n\nconst Login = mongoose.model('Login', userSchema, 'login');\n\napp.use('/api/weather', weatherRoutes);\napp.use('/api/cities', cityRoutes);\n\napp.post('/login', async (req, res) => {\n  const {username, password } = req.body;\n\n  try {\n    const user = await Login.findOne({ username });\n    if(!user) {\n      return res.status(404).json({ message : \"User not found\"});\n    }\n    const passHash = await bcrypt.hash(user.password, 10);\n    const isValidPassword = await bcrypt.compare(password, passHash);\n\n    if(!isValidPassword) {\n      return res.status(401).json({ message : \"Invalid Password\"});\n    }\n\n    const token = jwt.sign({ userId : user._id }, process.env.JWT_SECRET, {expiresIn: '1h'});\n    res.status(200).json({ token });\n  } catch (error) {\n    console.error('Login error:', error);\n    res.status(500).json({ message: 'Server Error'});\n  }\n});\n\n\napp.listen(port, () => {\n  console.log(`Server running on port ${port}`);\n});\n\n"],"mappings":"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","ignoreList":[]}},"mtime":1711572763768},"{\"assumptions\":{},\"sourceRoot\":\"/home/ketansutar/Projects/weather/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ketansutar/Projects/weather\",\"filename\":\"/home/ketansutar/Projects/weather/routes/weather.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ketansutar/Projects/weather\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const express = require('express');\nconst axios = require('axios');\nconst City = require('../models/city');\nconst router = express.Router();\nrouter.get('/weather', async (req, res) => {\n  try {\n    const cities = await City.find({});\n    const weatherPromises = cities.map(city => {\n      const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city.name}&appid=9887802c27c6c96117445a7764f04e14&units=metric`;\n      return axios.get(apiUrl).then(response => {\n        console.log(`Weather for ${city.name}:`, response.data.main.temp);\n      }).catch(error => {\n        console.error(`Error fetching weather for ${city.name}:`, error);\n      });\n    });\n    await Promise.all(weatherPromises);\n    console.log(\"end of list\");\n    res.send(\"Weather data fetched successfully\");\n  } catch (error) {\n    console.error(`Error fetching weather for ${city.name}:`, error);\n  }\n  ;\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImF4aW9zIiwiQ2l0eSIsInJvdXRlciIsIlJvdXRlciIsImdldCIsInJlcSIsInJlcyIsImNpdGllcyIsImZpbmQiLCJ3ZWF0aGVyUHJvbWlzZXMiLCJtYXAiLCJjaXR5IiwiYXBpVXJsIiwibmFtZSIsInRoZW4iLCJyZXNwb25zZSIsImNvbnNvbGUiLCJsb2ciLCJkYXRhIiwibWFpbiIsInRlbXAiLCJjYXRjaCIsImVycm9yIiwiUHJvbWlzZSIsImFsbCIsInNlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvaG9tZS9rZXRhbnN1dGFyL1Byb2plY3RzL3dlYXRoZXIvcm91dGVzLyIsInNvdXJjZXMiOlsid2VhdGhlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpO1xuY29uc3QgQ2l0eSA9IHJlcXVpcmUoJy4uL21vZGVscy9jaXR5Jyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KCcvd2VhdGhlcicsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNpdGllcyA9ICBhd2FpdCBDaXR5LmZpbmQoe30pOyBcbiAgICBjb25zdCB3ZWF0aGVyUHJvbWlzZXMgPSBjaXRpZXMubWFwKGNpdHkgPT4ge1xuICAgICAgY29uc3QgYXBpVXJsID0gYGh0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP3E9JHtjaXR5Lm5hbWV9JmFwcGlkPTk4ODc4MDJjMjdjNmM5NjExNzQ0NWE3NzY0ZjA0ZTE0JnVuaXRzPW1ldHJpY2A7XG4gICAgICByZXR1cm4gYXhpb3MuZ2V0KGFwaVVybClcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGBXZWF0aGVyIGZvciAke2NpdHkubmFtZX06YCwgcmVzcG9uc2UuZGF0YS5tYWluLnRlbXApO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yIGZldGNoaW5nIHdlYXRoZXIgZm9yICR7Y2l0eS5uYW1lfTpgLCBlcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgYXdhaXQgUHJvbWlzZS5hbGwod2VhdGhlclByb21pc2VzKTtcblxuICAgIGNvbnNvbGUubG9nKFwiZW5kIG9mIGxpc3RcIik7XG4gICAgcmVzLnNlbmQoXCJXZWF0aGVyIGRhdGEgZmV0Y2hlZCBzdWNjZXNzZnVsbHlcIik7XG4gIH1cbiAgY2F0Y2goZXJyb3Ipe1xuICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yIGZldGNoaW5nIHdlYXRoZXIgZm9yICR7Y2l0eS5uYW1lfTpgLCBlcnJvcik7XG4gIH07XG5cbn0pO1xuXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFDbEMsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLGdCQUFnQixDQUFDO0FBQ3RDLE1BQU1HLE1BQU0sR0FBR0osT0FBTyxDQUFDSyxNQUFNLENBQUMsQ0FBQztBQUUvQkQsTUFBTSxDQUFDRSxHQUFHLENBQUMsVUFBVSxFQUFFLE9BQU9DLEdBQUcsRUFBRUMsR0FBRyxLQUFLO0VBQ3pDLElBQUk7SUFDRixNQUFNQyxNQUFNLEdBQUksTUFBTU4sSUFBSSxDQUFDTyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbkMsTUFBTUMsZUFBZSxHQUFHRixNQUFNLENBQUNHLEdBQUcsQ0FBQ0MsSUFBSSxJQUFJO01BQ3pDLE1BQU1DLE1BQU0sR0FBSSxxREFBb0RELElBQUksQ0FBQ0UsSUFBSyxzREFBcUQ7TUFDbkksT0FBT2IsS0FBSyxDQUFDSSxHQUFHLENBQUNRLE1BQU0sQ0FBQyxDQUNyQkUsSUFBSSxDQUFDQyxRQUFRLElBQUk7UUFDaEJDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFFLGVBQWNOLElBQUksQ0FBQ0UsSUFBSyxHQUFFLEVBQUVFLFFBQVEsQ0FBQ0csSUFBSSxDQUFDQyxJQUFJLENBQUNDLElBQUksQ0FBQztNQUNuRSxDQUFDLENBQUMsQ0FDREMsS0FBSyxDQUFDQyxLQUFLLElBQUk7UUFDZE4sT0FBTyxDQUFDTSxLQUFLLENBQUUsOEJBQTZCWCxJQUFJLENBQUNFLElBQUssR0FBRSxFQUFFUyxLQUFLLENBQUM7TUFDbEUsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDO0lBRUYsTUFBTUMsT0FBTyxDQUFDQyxHQUFHLENBQUNmLGVBQWUsQ0FBQztJQUVsQ08sT0FBTyxDQUFDQyxHQUFHLENBQUMsYUFBYSxDQUFDO0lBQzFCWCxHQUFHLENBQUNtQixJQUFJLENBQUMsbUNBQW1DLENBQUM7RUFDL0MsQ0FBQyxDQUNELE9BQU1ILEtBQUssRUFBQztJQUNWTixPQUFPLENBQUNNLEtBQUssQ0FBRSw4QkFBNkJYLElBQUksQ0FBQ0UsSUFBSyxHQUFFLEVBQUVTLEtBQUssQ0FBQztFQUNsRTtFQUFDO0FBRUgsQ0FBQyxDQUFDO0FBR0ZJLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHekIsTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["express","require","axios","City","router","Router","get","req","res","cities","find","weatherPromises","map","city","apiUrl","name","then","response","console","log","data","main","temp","catch","error","Promise","all","send","module","exports"],"sourceRoot":"/home/ketansutar/Projects/weather/routes/","sources":["weather.js"],"sourcesContent":["const express = require('express');\nconst axios = require('axios');\nconst City = require('../models/city');\nconst router = express.Router();\n\nrouter.get('/weather', async (req, res) => {\n  try {\n    const cities =  await City.find({}); \n    const weatherPromises = cities.map(city => {\n      const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city.name}&appid=9887802c27c6c96117445a7764f04e14&units=metric`;\n      return axios.get(apiUrl)\n        .then(response => {\n          console.log(`Weather for ${city.name}:`, response.data.main.temp);\n        })\n        .catch(error => {\n          console.error(`Error fetching weather for ${city.name}:`, error);\n        });\n    });\n\n    await Promise.all(weatherPromises);\n\n    console.log(\"end of list\");\n    res.send(\"Weather data fetched successfully\");\n  }\n  catch(error){\n    console.error(`Error fetching weather for ${city.name}:`, error);\n  };\n\n});\n\n\nmodule.exports = router;\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAME,IAAI,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AACtC,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAM,CAAC,CAAC;AAE/BD,MAAM,CAACE,GAAG,CAAC,UAAU,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACzC,IAAI;IACF,MAAMC,MAAM,GAAI,MAAMN,IAAI,CAACO,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,MAAMC,eAAe,GAAGF,MAAM,CAACG,GAAG,CAACC,IAAI,IAAI;MACzC,MAAMC,MAAM,GAAI,qDAAoDD,IAAI,CAACE,IAAK,sDAAqD;MACnI,OAAOb,KAAK,CAACI,GAAG,CAACQ,MAAM,CAAC,CACrBE,IAAI,CAACC,QAAQ,IAAI;QAChBC,OAAO,CAACC,GAAG,CAAE,eAAcN,IAAI,CAACE,IAAK,GAAE,EAAEE,QAAQ,CAACG,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC;MACnE,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdN,OAAO,CAACM,KAAK,CAAE,8BAA6BX,IAAI,CAACE,IAAK,GAAE,EAAES,KAAK,CAAC;MAClE,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,MAAMC,OAAO,CAACC,GAAG,CAACf,eAAe,CAAC;IAElCO,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BX,GAAG,CAACmB,IAAI,CAAC,mCAAmC,CAAC;EAC/C,CAAC,CACD,OAAMH,KAAK,EAAC;IACVN,OAAO,CAACM,KAAK,CAAE,8BAA6BX,IAAI,CAACE,IAAK,GAAE,EAAES,KAAK,CAAC;EAClE;EAAC;AAEH,CAAC,CAAC;AAGFI,MAAM,CAACC,OAAO,GAAGzB,MAAM","ignoreList":[]}},"mtime":1711542481382},"{\"assumptions\":{},\"sourceRoot\":\"/home/ketansutar/Projects/weather/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ketansutar/Projects/weather\",\"filename\":\"/home/ketansutar/Projects/weather/models/city.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ketansutar/Projects/weather\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const mongoose = require('mongoose');\nconst citySchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  }\n  //,\n  // temperature: {\n  //   type: Number,\n  //   required: true\n  // },\n  // weather: {\n  //   type: String,\n  //   required: true\n  // }\n}, {\n  //timestamps: true // Adds createdAt and updatedAt timestamps automatically\n});\nmodule.exports = mongoose.model('City', citySchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJjaXR5U2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJzb3VyY2VSb290IjoiL2hvbWUva2V0YW5zdXRhci9Qcm9qZWN0cy93ZWF0aGVyL21vZGVscy8iLCJzb3VyY2VzIjpbImNpdHkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuXG5jb25zdCBjaXR5U2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gIH1cbiAgLy8sXG4gIC8vIHRlbXBlcmF0dXJlOiB7XG4gIC8vICAgdHlwZTogTnVtYmVyLFxuICAvLyAgIHJlcXVpcmVkOiB0cnVlXG4gIC8vIH0sXG4gIC8vIHdlYXRoZXI6IHtcbiAgLy8gICB0eXBlOiBTdHJpbmcsXG4gIC8vICAgcmVxdWlyZWQ6IHRydWVcbiAgLy8gfVxufSwgXG57XG4gIC8vdGltZXN0YW1wczogdHJ1ZSAvLyBBZGRzIGNyZWF0ZWRBdCBhbmQgdXBkYXRlZEF0IHRpbWVzdGFtcHMgYXV0b21hdGljYWxseVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoJ0NpdHknLCBjaXR5U2NoZW1hKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBVSxDQUFDO0FBRXBDLE1BQU1DLFVBQVUsR0FBRyxJQUFJRixRQUFRLENBQUNHLE1BQU0sQ0FBQztFQUNyQ0MsSUFBSSxFQUFFO0lBQ0pDLElBQUksRUFBRUMsTUFBTTtJQUNaQyxRQUFRLEVBQUU7RUFDWjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBQUNGLENBQUMsRUFDRDtFQUNFO0FBQUEsQ0FDRCxDQUFDO0FBRUZDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHVCxRQUFRLENBQUNVLEtBQUssQ0FBQyxNQUFNLEVBQUVSLFVBQVUsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["mongoose","require","citySchema","Schema","name","type","String","required","module","exports","model"],"sourceRoot":"/home/ketansutar/Projects/weather/models/","sources":["city.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst citySchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true,\n  }\n  //,\n  // temperature: {\n  //   type: Number,\n  //   required: true\n  // },\n  // weather: {\n  //   type: String,\n  //   required: true\n  // }\n}, \n{\n  //timestamps: true // Adds createdAt and updatedAt timestamps automatically\n});\n\nmodule.exports = mongoose.model('City', citySchema);\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,UAAU,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACrCC,IAAI,EAAE;IACJC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACZ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,EACD;EACE;AAAA,CACD,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAGT,QAAQ,CAACU,KAAK,CAAC,MAAM,EAAER,UAAU,CAAC","ignoreList":[]}},"mtime":1710567911692},"{\"assumptions\":{},\"sourceRoot\":\"/home/ketansutar/Projects/weather/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ketansutar/Projects/weather\",\"filename\":\"/home/ketansutar/Projects/weather/routes/cities.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ketansutar/Projects/weather\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const express = require('express');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst City = require('../models/city');\nconst router = express.Router();\n\n//const basicAuth = require('express-basic-auth');\n\n// const auth = basicAuth({\n//   users: {'ketansutar':'simple'},\n//   unauthorizedResponse: {message : 'Unauthorized'}\n// });\n\n// Middleware for authentication\nfunction authenticateToken(req, res, next) {\n  //const token = req.headers['authorization'];\n  const authHeader = req.headers['authorization'];\n  // Check if bearer token is there\n  const token = authHeader && authHeader.split(' ')[1];\n  if (token == null) return res.status(401).json({\n    message: 'Authentication token is required'\n  });\n  jwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {\n    if (err) {\n      console.error(err);\n      return res.status(403).json({\n        message: 'Invalid token'\n      });\n    }\n    req.userId = decoded.userId;\n    next();\n  });\n}\n;\n\n//add auth instead of authenticateToken to use basicAuth and uncomment above basicAuth code\nrouter.post('/add', authenticateToken, async (req, res) => {\n  const {\n    name\n  } = req.body;\n  if (!name) {\n    return res.status(400).json({\n      message: \"City name is required\"\n    });\n  }\n  try {\n    const newCity = new City({\n      name\n    });\n    await newCity.save();\n    res.status(201).json({\n      message: \"City Added Successfully\"\n    });\n  } catch (error) {\n    res.status(400).json({\n      message: error.message\n    });\n  }\n});\n\n//Api to delete city using cityname\nrouter.post('/delete', async (req, res) => {\n  const {\n    name\n  } = req.body;\n  if (!name) {\n    return res.status(400).json({\n      message: \"City name is required\"\n    });\n  }\n  try {\n    const result = await City.findOneAndDelete({\n      name\n    });\n    if (!result) {\n      return res.status(400).json({\n        message: \"City Not Found\"\n      });\n    }\n    res.send({\n      message: \"City Deleted Successfully !\"\n    });\n  } catch (error) {\n    res.status(400).json({\n      message: error.message\n    });\n  }\n});\n\n//search and update city name\nrouter.put('/update/:name', async (req, res) => {\n  const cityName = req.params.name;\n  const newCityName = req.body.name;\n  try {\n    const avlCity = await City.findOne({\n      name: cityName\n    });\n    if (!avlCity) {\n      return res.status(400).json({\n        message: \"City not found\"\n      });\n    }\n    avlCity.name = newCityName;\n    const updatedCity = await avlCity.save();\n    res.status(201).json({\n      message: \"City updated Successfully\",\n      updatedCity\n    });\n  } catch (error) {\n    res.status(400).json({\n      message: error.message\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","bcrypt","jwt","City","router","Router","authenticateToken","req","res","next","authHeader","headers","token","split","status","json","message","verify","process","env","JWT_SECRET","err","decoded","console","error","userId","post","name","body","newCity","save","result","findOneAndDelete","send","put","cityName","params","newCityName","avlCity","findOne","updatedCity","module","exports"],"sourceRoot":"/home/ketansutar/Projects/weather/routes/","sources":["cities.js"],"sourcesContent":["const express = require('express');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst City = require('../models/city');\nconst router = express.Router();\n\n//const basicAuth = require('express-basic-auth');\n\n// const auth = basicAuth({\n//   users: {'ketansutar':'simple'},\n//   unauthorizedResponse: {message : 'Unauthorized'}\n// });\n\n// Middleware for authentication\nfunction authenticateToken (req, res, next) {  \n  //const token = req.headers['authorization'];\n  const authHeader = req.headers['authorization'];\n  // Check if bearer token is there\n  const token = authHeader && authHeader.split(' ')[1];\n  if (token == null) return res.status(401).json({ message: 'Authentication token is required' });\n\n  jwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {\n    if (err) {\n      console.error(err);\n      return res.status(403).json({message: 'Invalid token'});\n    }  \n    req.userId = decoded.userId;\n    next();\n  });\n};\n\n\n//add auth instead of authenticateToken to use basicAuth and uncomment above basicAuth code\nrouter.post('/add', authenticateToken, async ( req, res) => {\n  const { name } = req.body;\n \n  if (!name) {\n    return res.status(400).json({ message: \"City name is required\" });\n  }\n  try {\n    const newCity = new City({ name });\n    await newCity.save();\n    res.status(201).json({message: \"City Added Successfully\"});\n  } catch (error) {\n    res.status(400).json({ message: error.message });\n  }\n});\n\n\n//Api to delete city using cityname\nrouter.post('/delete', async ( req, res) => {\n  const { name } = req.body;\n\n  if (!name) {\n    return res.status(400).json({ message: \"City name is required\" });\n  }\n\n  try {\n    const result = await City.findOneAndDelete({ name });\n    \n    if (!result) {\n      return res.status(400).json({ message: \"City Not Found\"});\n    }\n    res.send({ message : \"City Deleted Successfully !\"});   \n    \n  } catch (error) {\n    res.status(400).json({ message: error.message });\n  }\n});\n\n\n//search and update city name\nrouter.put('/update/:name', async ( req, res) => {\n\n  const cityName = req.params.name;\n  const newCityName = req.body.name;\n\n  try { \n    const avlCity = await City.findOne({name: cityName});\n    if (!avlCity) {\n      return res.status(400).json({ message: \"City not found\" });\n    }\n    \n    avlCity.name = newCityName;\n    const updatedCity = await avlCity.save();\n    res.status(201).json({message: \"City updated Successfully\", updatedCity});\n\n    } catch (error) {\n      res.status(400).json({ message: error.message });\n  }\n});\nmodule.exports = router;\n"],"mappings":"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","ignoreList":[]}},"mtime":1711572247087}}